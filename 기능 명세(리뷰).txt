1. 테이블 명
    skdevsec_review
2. 테이블 사용 컬럼
    1. rid (리뷰 고유 번호)
    2. pid (상품 고유 번호)
    3. rstar (평점)
    4. unickname (유저 별명)
    5. rcreate_date (리뷰 날짜)
3. 테이블에 귀속되는 기능들
    1. 리뷰 출력
    2. 리뷰 등록
    3. 리뷰 삭제
4. 각 기능 별 상세 정보
    1. 리뷰 출력
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecReview/review_output
        2. 반드시 받아야 하는 변수
            1. pid
        3. 참조하는 테이블
            skdevsec_review
        4. 사용 되는 쿼리문
            SELECT rid, rstar, unickname, rcreate_date FROM skdevsec_review where pid='pid' order by rid desc
        5. 실행되는 기능 및 에러 처리
            1. pid에 해당하는 상품의 리뷰 정보를 최신 순으로 정렬해서 저장
            2. 데이터가 있으면 전송, 없거나 에러 발생 시 0 전송

    2. 리뷰 등록
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecReview/review_write
        2. 반드시 받아야 하는 변수
            1. pid
            2. rstar
            3. unickname
            4. rcreate_date
        3. 참조하는 테이블
            skdevsec_review, skdevsec_product
        4. 사용 되는 쿼리문
            INSERT INTO skdevsec_review(pid, rstar, unickname, rcreate_date) VALUES('pid', 'rstar', 'unickname', 'rcreate_date')
            UPDATE skdevsec_product SET preview = (SELECT COUNT(*) FROM skdevsec_review WHERE pid='pid'), preview_avg =(SELECT round(avg(rstar),1) FROM skdevsec_review WHERE pid='pid')  WHERE pid='pid'
        5. 실행되는 기능 및 에러 처리
            1. 우선 전달 받은 데이터를 통해 리뷰 테이블에 데이터 생성
            2. 리뷰가 생김으로써 변화하는 상품 테이블의 일부 데이터를 새롭게 갱신
            3. 성공하면 1, 실패하거나 에러 발생 하면 0 전송

    2. 리뷰 등록
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecReview/comment_delete
        2. 반드시 받아야 하는 변수
            1. rid
            2. pid
        3. 참조하는 테이블
            skdevsec_review, skdevsec_product
        4. 사용 되는 쿼리문
            DELETE FROM skdevsec_review WHERE rid='rid'
            UPDATE skdevsec_product SET preview = (SELECT COUNT(*) FROM skdevsec_review WHERE pid='pid'), preview_avg =(SELECT round(avg(rstar),1) FROM skdevsec_review WHERE pid='pid')  WHERE pid='pid'
        5. 실행되는 기능 및 에러 처리
            1. 전달 받은 rid에 해당하는 리뷰 삭제
            2. 삭제 후 변화하는 상품 테이블의 일부 데이터를 새롭게 갱신
            3. 성공 하면 1, 실패 하거나 에러 발생 시 0 전송