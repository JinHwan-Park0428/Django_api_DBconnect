1. 테이블 명
    skdevsec_product
2. 테이블 사용 컬럼
    1. pid (상품 고유 번호)
    2. pname (상품 명)
    3. pcate (상품 카테고리)
    4. pimage (상품 이미지 파일)
    5. ptext (상품 정보)
    6. pprice (상품 가격)
    7. pcreate_date (상품 제조 일자)
    8. preview (상품 리뷰 갯수)
    9. preview_avg (상품 리뷰 평균 점수)
    10. pcount (상품 갯수)
3. 테이블에 귀속되는 기능들
    1. 상품 리스트 출력
    2. 상품 상세 페이지 출력
    3. 상품 등록
    4. 상품 수정
    5. 상품 삭제
4. 각 기능 별 상세 정보
    1. 상품 리스트 출력
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/product_output
        2. 반드시 받아야 하는 변수
            1. pcate
            2. ppage
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            SELECT COUNT(*) FROM skdevsec_product WHERE pcate='pcate'
            SELECT * FROM skdevsec_product where pcate='pcate' order by pid desc limit (ppage * 10 - 10), 10
        5. 실행되는 기능 및 에러 처리
            1. 카테고리에 해당하는 상품 갯수 저장
            2. 카테고리와 페이지에 해당하는 상품을 10개 저장
            3. 데이터가 있으면 전송, 없거나 실패하면 0 전송

    2. 상품 상세 페이지 출력
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/product_inside
        2. 반드시 받아야 하는 변수
            1. pid
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            SELECT * FROM skdevsec_product WHERE pid='pid'
        5. 실행되는 기능 및 에러 처리
            1. pid에 해당하는 상품의 모든 정보를 저장
            2. 데이터가 있으면 전송, 데이터가 없거나 에러일 시 0 전송

    3. 상품 등록
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/product_upload
        2. 반드시 받아야 하는 변수
            1. pname
            2. pcate
            3. pimage
            4. ptext
            5. pprice
            6. pcreate_date
            7. preview
            8. preview_avg
            9. pcount
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            file_serializer = SkdevsecProductSerializer(data=new_data)
        5. 실행되는 기능 및 에러 처리
            1. DB 저장에 필요한 필수 변수를 모두 받은 뒤 serializer에 저장
            2. 저장 시도 및 성공 시 1 전송, 실패하거나 에러 발생 시 0 전송

    4. 상품 수정
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/change_product
        2. 반드시 받아야 하는 변수
            1. pid
            2. pname
            3. pcate
            4. pimage
            5. ptext
            6. pprice
            7. pcreate_date
            8. preview
            9. preview_avg
            10. pcount
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            SELECT pimage FROM skdevsec_product WHERE pid='pid'
            file_serializer = SkdevsecProductSerializer(data=new_data)
        5. 실행되는 기능 및 에러 처리
            1. pid에 해당하는 상품 데이터를 저장
            2. 수정할 상품의 pid를 입력 받아 이미지를 우선 제거
            3. 이후 수정할 상품의 데이터를 시리얼라이저에 넣어서 갱신
            4. 갱신에 성공하면 1 실패하거나 에러 발생 시 0 전송

    5. 상품 삭제
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/product_delete
        2. 반드시 받아야 하는 변수
            1. pid
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            SELECT pimage FROM skdevsec_product WHERE pid='pid'
            DELETE FROM skdevsec_product WHERE pid='pid'
        5. 실행되는 기능 및 에러 처리
            1. 수정할 상품의 pid를 입력 받아 이미지를 우선 제거
            2. 이후 pid에 해당하는 데이터를 테이블에서 삭제
            3. 성공 하면 1, 실패하거나 에러 발생 시 0 전송

    6. 상품 검색
        1. 사용하기 위한 함수 주소
            http://10.60.15.210:8000/SkdevsecProduct/product_search
        2. 반드시 받아야 하는 변수
            1. pcode
            2. psearch
        3. 참조하는 테이블
            skdevsec_product
        4. 사용 되는 쿼리문
            1. 전체 검색
                SELECT pid, pcate, pimage, pname, pprice, preview, preview_avg FROM skdevsec_product WHERE (pname LIKE '%psearch%' OR pcate='psearch' OR preview > 'psearch')
            2. 상품 명 검색
                SELECT pid, pcate, pimage, pname, pprice, preview, preview_avg FROM skdevsec_product WHERE (pname LIKE '%psearch%')
            3. 카테고리 검색
                SELECT pid, pcate, pimage, pname, pprice, preview, preview_avg FROM skdevsec_product WHERE (pcate='psearch')
            4. 평점 기준 검색
                SELECT pid, pcate, pimage, pname, pprice, preview, preview_avg FROM skdevsec_product WHERE (preview > 'psearch')
        5. 실행되는 기능 및 에러 처리
            1. 우선 pcode를 통해서 검색 조건을 파악
            2. 이후 psearch를 통해서 조건부 검색 결과를 수집
            3. 성공하면 데이터 전송, 실패하거나 데이터가 없으면 0 전송